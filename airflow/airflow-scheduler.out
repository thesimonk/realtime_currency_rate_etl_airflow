[[34m2025-05-26T22:12:26.122+0300[0m] {[34mtask_context_logger.py:[0m63} INFO[0m - Task context logging is enabled[0m
[[34m2025-05-26T22:12:26.123+0300[0m] {[34mexecutor_loader.py:[0m235} INFO[0m - Loaded executor: SequentialExecutor[0m
[[34m2025-05-26T22:12:26.194+0300[0m] {[34mscheduler_job_runner.py:[0m796} INFO[0m - Starting the scheduler[0m
[[34m2025-05-26T22:12:26.196+0300[0m] {[34mscheduler_job_runner.py:[0m803} INFO[0m - Processing each file at most -1 times[0m
[[34m2025-05-26T22:12:26.205+0300[0m] {[34mmanager.py:[0m170} INFO[0m - Launched DagFileProcessorManager with pid: 26872[0m
[[34m2025-05-26T22:12:26.209+0300[0m] {[34mscheduler_job_runner.py:[0m1595} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2025-05-26T22:12:26.212+0300[0m] {[34msettings.py:[0m60} INFO[0m - Configured default timezone UTC[0m
[2025-05-26T22:12:26.267+0300] {manager.py:393} WARNING - Because we cannot use more than 1 thread (parsing_processes = 2) when using sqlite. So we set parallelism to 1.
[[34m2025-05-26T22:13:15.206+0300[0m] {[34mscheduler_job_runner.py:[0m417} INFO[0m - 1 tasks up for execution:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [scheduled]>[0m
[[34m2025-05-26T22:13:15.207+0300[0m] {[34mscheduler_job_runner.py:[0m480} INFO[0m - DAG currency_etl_dag has 0/16 running and queued tasks[0m
[[34m2025-05-26T22:13:15.207+0300[0m] {[34mscheduler_job_runner.py:[0m596} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [scheduled]>[0m
[[34m2025-05-26T22:13:15.210+0300[0m] {[34mscheduler_job_runner.py:[0m639} INFO[0m - Sending TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:13:14.862454+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue default[0m
[[34m2025-05-26T22:13:15.210+0300[0m] {[34mbase_executor.py:[0m149} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:13:14.862454+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:13:15.220+0300[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:13:14.862454+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:13:16.390+0300[0m] {[34mdagbag.py:[0m545} INFO[0m - Filling up the DagBag from /home/imsim/currency_pipeline/airflow/dags/currency_dag.py[0m
[[34m2025-05-26T22:13:16.641+0300[0m] {[34mtutorial_taskflow_api_virtualenv.py:[0m29} WARNING[0m - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.[0m
[[34m2025-05-26T22:13:16.706+0300[0m] {[34mexample_python_decorator.py:[0m80} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:13:16.712+0300[0m] {[34mexample_kubernetes_executor.py:[0m39} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:13:17.156+0300[0m] {[34mexample_python_operator.py:[0m93} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:13:17.160+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/home/imsim/currency_pipeline/venv/lib/python3.12/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 38, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2025-05-26T22:13:17.161+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m41} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:13:18.440+0300[0m] {[34mtask_command.py:[0m426} INFO[0m - Running <TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [queued]> on host Home.[0m
[[34m2025-05-26T22:13:19.771+0300[0m] {[34mscheduler_job_runner.py:[0m689} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:13:14.862454+00:00', try_number=1, map_index=-1)[0m
[[34m2025-05-26T22:13:19.776+0300[0m] {[34mscheduler_job_runner.py:[0m721} INFO[0m - TaskInstance Finished: dag_id=currency_etl_dag, task_id=fetch_and_store_currency, run_id=manual__2025-05-26T19:13:14.862454+00:00, map_index=-1, run_start_date=2025-05-26 19:13:18.501647+00:00, run_end_date=2025-05-26 19:13:19.252946+00:00, run_duration=0.751299, state=up_for_retry, executor_state=success, try_number=1, max_tries=1, job_id=19, pool=default_pool, queue=default, priority_weight=1, operator=PythonOperator, queued_dttm=2025-05-26 19:13:15.208488+00:00, queued_by_job_id=18, pid=26948[0m
[[34m2025-05-26T22:17:33.951+0300[0m] {[34mscheduler_job_runner.py:[0m1595} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2025-05-26T22:18:19.579+0300[0m] {[34mscheduler_job_runner.py:[0m417} INFO[0m - 1 tasks up for execution:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [scheduled]>[0m
[[34m2025-05-26T22:18:19.579+0300[0m] {[34mscheduler_job_runner.py:[0m480} INFO[0m - DAG currency_etl_dag has 0/16 running and queued tasks[0m
[[34m2025-05-26T22:18:19.580+0300[0m] {[34mscheduler_job_runner.py:[0m596} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [scheduled]>[0m
[[34m2025-05-26T22:18:19.581+0300[0m] {[34mscheduler_job_runner.py:[0m639} INFO[0m - Sending TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:13:14.862454+00:00', try_number=2, map_index=-1) to executor with priority 1 and queue default[0m
[[34m2025-05-26T22:18:19.581+0300[0m] {[34mbase_executor.py:[0m149} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:13:14.862454+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:18:19.590+0300[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:13:14.862454+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:18:20.642+0300[0m] {[34mdagbag.py:[0m545} INFO[0m - Filling up the DagBag from /home/imsim/currency_pipeline/airflow/dags/currency_dag.py[0m
[[34m2025-05-26T22:18:20.855+0300[0m] {[34mtutorial_taskflow_api_virtualenv.py:[0m29} WARNING[0m - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.[0m
[[34m2025-05-26T22:18:20.909+0300[0m] {[34mexample_python_decorator.py:[0m80} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:18:20.914+0300[0m] {[34mexample_kubernetes_executor.py:[0m39} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:18:21.274+0300[0m] {[34mexample_python_operator.py:[0m93} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:18:21.278+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/home/imsim/currency_pipeline/venv/lib/python3.12/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 38, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2025-05-26T22:18:21.278+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m41} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:18:21.611+0300[0m] {[34mtask_command.py:[0m426} INFO[0m - Running <TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:13:14.862454+00:00 [queued]> on host Home.[0m
[[34m2025-05-26T22:18:22.842+0300[0m] {[34mscheduler_job_runner.py:[0m689} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:13:14.862454+00:00', try_number=2, map_index=-1)[0m
[[34m2025-05-26T22:18:22.848+0300[0m] {[34mscheduler_job_runner.py:[0m721} INFO[0m - TaskInstance Finished: dag_id=currency_etl_dag, task_id=fetch_and_store_currency, run_id=manual__2025-05-26T19:13:14.862454+00:00, map_index=-1, run_start_date=2025-05-26 19:18:21.667230+00:00, run_end_date=2025-05-26 19:18:22.313770+00:00, run_duration=0.64654, state=failed, executor_state=success, try_number=2, max_tries=1, job_id=20, pool=default_pool, queue=default, priority_weight=1, operator=PythonOperator, queued_dttm=2025-05-26 19:18:19.580403+00:00, queued_by_job_id=18, pid=27356[0m
[[34m2025-05-26T22:18:23.002+0300[0m] {[34mdagrun.py:[0m820} ERROR[0m - Marking run <DagRun currency_etl_dag @ 2025-05-26 19:13:14.862454+00:00: manual__2025-05-26T19:13:14.862454+00:00, state:running, queued_at: 2025-05-26 19:13:14.880174+00:00. externally triggered: True> failed[0m
[[34m2025-05-26T22:18:23.002+0300[0m] {[34mdagrun.py:[0m902} INFO[0m - DagRun Finished: dag_id=currency_etl_dag, execution_date=2025-05-26 19:13:14.862454+00:00, run_id=manual__2025-05-26T19:13:14.862454+00:00, run_start_date=2025-05-26 19:13:15.161361+00:00, run_end_date=2025-05-26 19:18:23.002630+00:00, run_duration=307.841269, state=failed, external_trigger=True, run_type=manual, data_interval_start=2025-05-26 18:00:00+00:00, data_interval_end=2025-05-26 19:00:00+00:00, dag_hash=0ea53f5807edd8c2c8e4cef038951c36[0m
[[34m2025-05-26T22:22:42.124+0300[0m] {[34mscheduler_job_runner.py:[0m1595} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2025-05-26T22:27:49.317+0300[0m] {[34mscheduler_job_runner.py:[0m1595} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2025-05-26T22:32:40.108+0300[0m] {[34mscheduler_job_runner.py:[0m417} INFO[0m - 1 tasks up for execution:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:32:39.705980+00:00 [scheduled]>[0m
[[34m2025-05-26T22:32:40.108+0300[0m] {[34mscheduler_job_runner.py:[0m480} INFO[0m - DAG currency_etl_dag has 0/16 running and queued tasks[0m
[[34m2025-05-26T22:32:40.109+0300[0m] {[34mscheduler_job_runner.py:[0m596} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:32:39.705980+00:00 [scheduled]>[0m
[[34m2025-05-26T22:32:40.110+0300[0m] {[34mscheduler_job_runner.py:[0m639} INFO[0m - Sending TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:32:39.705980+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue default[0m
[[34m2025-05-26T22:32:40.110+0300[0m] {[34mbase_executor.py:[0m149} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:32:39.705980+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:32:40.119+0300[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:32:39.705980+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:32:41.315+0300[0m] {[34mdagbag.py:[0m545} INFO[0m - Filling up the DagBag from /home/imsim/currency_pipeline/airflow/dags/currency_dag.py[0m
[[34m2025-05-26T22:32:41.520+0300[0m] {[34mtutorial_taskflow_api_virtualenv.py:[0m29} WARNING[0m - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.[0m
[[34m2025-05-26T22:32:41.594+0300[0m] {[34mexample_python_decorator.py:[0m80} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:32:41.602+0300[0m] {[34mexample_kubernetes_executor.py:[0m39} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:32:42.012+0300[0m] {[34mexample_python_operator.py:[0m93} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:32:42.016+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/home/imsim/currency_pipeline/venv/lib/python3.12/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 38, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2025-05-26T22:32:42.016+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m41} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:32:42.439+0300[0m] {[34mtask_command.py:[0m426} INFO[0m - Running <TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:32:39.705980+00:00 [queued]> on host Home.[0m
[[34m2025-05-26T22:32:43.915+0300[0m] {[34mscheduler_job_runner.py:[0m689} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:32:39.705980+00:00', try_number=1, map_index=-1)[0m
[[34m2025-05-26T22:32:43.919+0300[0m] {[34mscheduler_job_runner.py:[0m721} INFO[0m - TaskInstance Finished: dag_id=currency_etl_dag, task_id=fetch_and_store_currency, run_id=manual__2025-05-26T19:32:39.705980+00:00, map_index=-1, run_start_date=2025-05-26 19:32:42.493220+00:00, run_end_date=2025-05-26 19:32:43.413834+00:00, run_duration=0.920614, state=success, executor_state=success, try_number=1, max_tries=1, job_id=21, pool=default_pool, queue=default, priority_weight=1, operator=PythonOperator, queued_dttm=2025-05-26 19:32:40.109437+00:00, queued_by_job_id=18, pid=28398[0m
[[34m2025-05-26T22:32:44.064+0300[0m] {[34mdagrun.py:[0m851} INFO[0m - Marking run <DagRun currency_etl_dag @ 2025-05-26 19:32:39.705980+00:00: manual__2025-05-26T19:32:39.705980+00:00, state:running, queued_at: 2025-05-26 19:32:39.722108+00:00. externally triggered: True> successful[0m
[[34m2025-05-26T22:32:44.065+0300[0m] {[34mdagrun.py:[0m902} INFO[0m - DagRun Finished: dag_id=currency_etl_dag, execution_date=2025-05-26 19:32:39.705980+00:00, run_id=manual__2025-05-26T19:32:39.705980+00:00, run_start_date=2025-05-26 19:32:40.073847+00:00, run_end_date=2025-05-26 19:32:44.065034+00:00, run_duration=3.991187, state=success, external_trigger=True, run_type=manual, data_interval_start=2025-05-26 18:00:00+00:00, data_interval_end=2025-05-26 19:00:00+00:00, dag_hash=385a150fc0f0c37d93cd73c0dfa4cffa[0m
[[34m2025-05-26T22:32:57.367+0300[0m] {[34mscheduler_job_runner.py:[0m1595} INFO[0m - Adopting or resetting orphaned tasks for active dag runs[0m
[[34m2025-05-26T22:35:39.545+0300[0m] {[34mscheduler_job_runner.py:[0m417} INFO[0m - 1 tasks up for execution:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:35:38.514839+00:00 [scheduled]>[0m
[[34m2025-05-26T22:35:39.546+0300[0m] {[34mscheduler_job_runner.py:[0m480} INFO[0m - DAG currency_etl_dag has 0/16 running and queued tasks[0m
[[34m2025-05-26T22:35:39.546+0300[0m] {[34mscheduler_job_runner.py:[0m596} INFO[0m - Setting the following tasks to queued state:
	<TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:35:38.514839+00:00 [scheduled]>[0m
[[34m2025-05-26T22:35:39.547+0300[0m] {[34mscheduler_job_runner.py:[0m639} INFO[0m - Sending TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:35:38.514839+00:00', try_number=1, map_index=-1) to executor with priority 1 and queue default[0m
[[34m2025-05-26T22:35:39.547+0300[0m] {[34mbase_executor.py:[0m149} INFO[0m - Adding to queue: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:35:38.514839+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:35:39.560+0300[0m] {[34msequential_executor.py:[0m74} INFO[0m - Executing command: ['airflow', 'tasks', 'run', 'currency_etl_dag', 'fetch_and_store_currency', 'manual__2025-05-26T19:35:38.514839+00:00', '--local', '--subdir', 'DAGS_FOLDER/currency_dag.py'][0m
[[34m2025-05-26T22:35:40.760+0300[0m] {[34mdagbag.py:[0m545} INFO[0m - Filling up the DagBag from /home/imsim/currency_pipeline/airflow/dags/currency_dag.py[0m
[[34m2025-05-26T22:35:41.063+0300[0m] {[34mtutorial_taskflow_api_virtualenv.py:[0m29} WARNING[0m - The tutorial_taskflow_api_virtualenv example DAG requires virtualenv, please install it.[0m
[[34m2025-05-26T22:35:41.123+0300[0m] {[34mexample_python_decorator.py:[0m80} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:35:41.128+0300[0m] {[34mexample_kubernetes_executor.py:[0m39} WARNING[0m - The example_kubernetes_executor example DAG requires the kubernetes provider. Please install it with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:35:41.483+0300[0m] {[34mexample_python_operator.py:[0m93} WARNING[0m - The virtalenv_python example task requires virtualenv, please install it.[0m
[[34m2025-05-26T22:35:41.486+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m40} WARNING[0m - Could not import DAGs in example_local_kubernetes_executor.py[0m
Traceback (most recent call last):
  File "/home/imsim/currency_pipeline/venv/lib/python3.12/site-packages/airflow/example_dags/example_local_kubernetes_executor.py", line 38, in <module>
    from kubernetes.client import models as k8s
ModuleNotFoundError: No module named 'kubernetes'
[[34m2025-05-26T22:35:41.486+0300[0m] {[34mexample_local_kubernetes_executor.py:[0m41} WARNING[0m - Install Kubernetes dependencies with: pip install apache-airflow[cncf.kubernetes][0m
[[34m2025-05-26T22:35:41.809+0300[0m] {[34mtask_command.py:[0m426} INFO[0m - Running <TaskInstance: currency_etl_dag.fetch_and_store_currency manual__2025-05-26T19:35:38.514839+00:00 [queued]> on host Home.[0m
[[34m2025-05-26T22:35:42.967+0300[0m] {[34mscheduler_job_runner.py:[0m689} INFO[0m - Received executor event with state success for task instance TaskInstanceKey(dag_id='currency_etl_dag', task_id='fetch_and_store_currency', run_id='manual__2025-05-26T19:35:38.514839+00:00', try_number=1, map_index=-1)[0m
[[34m2025-05-26T22:35:42.970+0300[0m] {[34mscheduler_job_runner.py:[0m721} INFO[0m - TaskInstance Finished: dag_id=currency_etl_dag, task_id=fetch_and_store_currency, run_id=manual__2025-05-26T19:35:38.514839+00:00, map_index=-1, run_start_date=2025-05-26 19:35:41.858178+00:00, run_end_date=2025-05-26 19:35:42.493817+00:00, run_duration=0.635639, state=success, executor_state=success, try_number=1, max_tries=0, job_id=22, pool=default_pool, queue=default, priority_weight=1, operator=PythonOperator, queued_dttm=2025-05-26 19:35:39.546819+00:00, queued_by_job_id=18, pid=28620[0m
[[34m2025-05-26T22:35:43.110+0300[0m] {[34mdagrun.py:[0m851} INFO[0m - Marking run <DagRun currency_etl_dag @ 2025-05-26 19:35:38.514839+00:00: manual__2025-05-26T19:35:38.514839+00:00, state:running, queued_at: 2025-05-26 19:35:38.533743+00:00. externally triggered: True> successful[0m
[[34m2025-05-26T22:35:43.111+0300[0m] {[34mdagrun.py:[0m902} INFO[0m - DagRun Finished: dag_id=currency_etl_dag, execution_date=2025-05-26 19:35:38.514839+00:00, run_id=manual__2025-05-26T19:35:38.514839+00:00, run_start_date=2025-05-26 19:35:39.510109+00:00, run_end_date=2025-05-26 19:35:43.111076+00:00, run_duration=3.600967, state=success, external_trigger=True, run_type=manual, data_interval_start=2025-05-26 18:00:00+00:00, data_interval_end=2025-05-26 19:00:00+00:00, dag_hash=71a7865d88d5cdb50b73b7882012ecff[0m
